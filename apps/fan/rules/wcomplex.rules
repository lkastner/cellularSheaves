object PolyhedralComplex {
	
   user_method wcomplex( $ ){
      my($pc, $p) = @_;
      my $newblocks = new Map<Set<Set<Int> >, Matrix >();
      if ($p == 0){
      	  $newblocks = build_blocks_constant($pc);
      } else{ 
      	  my $simpleBlocks = $pc->SIMPLE_BLOCKS;
      	  foreach my $key (keys %$simpleBlocks){
         	$newblocks->{$key} = wedge_matrix($simpleBlocks->{$key}, $p);
      	  }
      }
      my $sheaf = $pc->add("SHEAF", BLOCKS=>$newblocks);
      return $sheaf;
   }

   user_method dualwcomplex( $ ){
      my($pc, $p) = @_;
      my $simpleBlocks = $pc->SIMPLE_BLOCKS;
      my $newblocks = new Map<Set<Set<Int> >, Matrix >();
      foreach my $key (keys %$simpleBlocks){
         $newblocks->{$key} = transpose(wedge_matrix($simpleBlocks->{$key}, $p));
      }
      my $cosheaf = $pc->add("COSHEAF", BLOCKS=>$newblocks);
      return $cosheaf;
   }
   
 
}

